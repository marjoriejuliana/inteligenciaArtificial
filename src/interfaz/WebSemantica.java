/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import com.hp.hpl.jena.ontology.Individual;
import com.hp.hpl.jena.ontology.ObjectProperty;
import com.hp.hpl.jena.ontology.OntClass;
import com.hp.hpl.jena.ontology.OntModel;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Resource;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;



/*
 *
 * @author hp
 */
public class WebSemantica extends javax.swing.JFrame {

    /**
     * Creates new form WebSemantica
     */
    public OntModel modeloOntology;
    private DefaultListModel modeloListaClases = new DefaultListModel();
    private DefaultListModel modeloListaIndividuos1 = new DefaultListModel();
    private DefaultListModel modeloListaSubClases = new DefaultListModel();
    private DefaultListModel modeloListaIndividuos2 = new DefaultListModel();
    private DefaultListModel modeloListaClases2 = new DefaultListModel();
    private DefaultListModel modeloListaPropiedades = new DefaultListModel();
    private DefaultListModel modeloListaInversa = new DefaultListModel();

    public WebSemantica() {
        initComponents();
        this.jListClases.removeAll();
        this.jListIndividuos1.removeAll();
        this.jListSubClases.removeAll();
        this.jListIndividuos2.removeAll();
        this.jListClases.removeAll();
        this.jListPropiedades.removeAll();
        //  this.jList1=new JList(modeloLista);
        cargarOntologia();
        agregarClases();
        cargarOntologia();
        agregarIndividuos();
        cargarOntologia();
        agregarPropiedades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListClases = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListIndividuos1 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListSubClases = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListIndividuos2 = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        btnCalcularClases = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListPropiedades = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListClases2 = new javax.swing.JList();
        btnCalcularIndividuos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setText("WEB SEM√ÅNTICA: UNIVERSIDAD NACIONAL DE LOJA");

        jScrollPane1.setViewportView(jListClases);

        jListIndividuos1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListIndividuos1);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel2.setText("Clases");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel3.setText("Individuos");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setText("SubClases");

        jScrollPane3.setViewportView(jListSubClases);

        jScrollPane4.setViewportView(jListIndividuos2);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel5.setText("Individuos");

        btnCalcularClases.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        btnCalcularClases.setText("Calcular");
        btnCalcularClases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularClasesActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel6.setText("Propiedades");

        jScrollPane5.setViewportView(jListPropiedades);

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel7.setText("Clase a las que pertenece:");

        jScrollPane6.setViewportView(jListClases2);

        btnCalcularIndividuos.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        btnCalcularIndividuos.setText("Calcular");
        btnCalcularIndividuos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularIndividuosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel2)
                .addGap(247, 247, 247)
                .addComponent(jLabel3)
                .addGap(163, 163, 163)
                .addComponent(jLabel4))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(btnCalcularClases)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(68, 68, 68)
                    .addComponent(jLabel5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(13, 13, 13)
                    .addComponent(btnCalcularIndividuos)
                    .addGap(20, 20, 20)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel6))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnCalcularClases))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(btnCalcularIndividuos))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalcularClasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularClasesActionPerformed
        // TODO add your handling code here:
        String opcion = (String) jListClases.getSelectedValue();
        obtenerIndividuos(opcion);
        obtenerSubClases(opcion);

    }//GEN-LAST:event_btnCalcularClasesActionPerformed

    private void btnCalcularIndividuosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularIndividuosActionPerformed
        // TODO add your handling code here:
         String opcion = (String) jListIndividuos2.getSelectedValue();
        obtenerClases(opcion);
        
//        String opcion = (String) jListPropiedades.getSelectedValue();
//        obtenerClases(opcion);
    }//GEN-LAST:event_btnCalcularIndividuosActionPerformed

    /**
     * @param args the command line arguments
     */
    public void cargarOntologia() {
        modeloOntology = ModelFactory.createOntologyModel();
        try {
            InputStream file = new FileInputStream("C:/Users/hp/Desktop/WebSemantica.owl");
//            System.out.println(file.read());
            //leer RDF cargar el XML
            modeloOntology.read(file, "");
        } catch (Exception ex) {
            System.out.println("" + ex);
        }
    }

    public void agregarClases() {
        Iterator<OntClass> clases = modeloOntology.listClasses();
        while (clases.hasNext()) {
            // System.out.println(clases.next().getLocalName());
//             if (clases.next().getLocalName().equalsIgnoreCase("") == false) {
            if (clases.hasNext() == true && clases.next().getLocalName() != null) {
                modeloListaClases.addElement(clases.next().getLocalName());
            }
//             }
        }
        this.jListClases.setModel(modeloListaClases);
    }

    public void agregarIndividuos() {
        Iterator<Individual> individuos = modeloOntology.listIndividuals();
        while (individuos.hasNext()) {
            // System.out.println(individuos.next().getLocalName());
            //   if (individuos.next().getLocalName().equalsIgnoreCase("") == false) {
            modeloListaIndividuos2.addElement(individuos.next().getLocalName());
            // }
        }
        this.jListIndividuos2.setModel(modeloListaIndividuos2);
    }

    public void agregarPropiedades() {
        Iterator<ObjectProperty> propiedades = modeloOntology.listObjectProperties();
        while (propiedades.hasNext()) {
            modeloListaPropiedades.addElement(propiedades.next().getLocalName());
            //System.out.println(propiedades.next().getLocalName());
        }
        this.jListPropiedades.setModel(modeloListaPropiedades);
    }

    public void obtenerIndividuos(String className) {
        String ns = "http://www.semanticweb.org/hp/ontologies/2014/5/examenWebSemantica#";
        //className = "Materias_ModuloX";
        jListIndividuos1.removeAll();
        modeloListaIndividuos1.clear();
        OntClass ontClass = modeloOntology.getOntClass(ns + className);
        try {
            Iterator it = ontClass.listInstances();
            while (it.hasNext()) {
                String instanceName = it.next().toString();
                instanceName = instanceName.substring(instanceName.indexOf("#") + 1);
                modeloListaIndividuos1.addElement(instanceName);
                System.out.println("instancia: " + instanceName);
            }
            jListIndividuos1.setModel(modeloListaIndividuos1);
        } catch (Exception in) {
        }
    }

    public void obtenerSubClases(String className) {
        String ns = "http://www.semanticweb.org/hp/ontologies/2014/5/examenWebSemantica#";
        //className = "Modulo_III";
        jListSubClases.removeAll();
        modeloListaSubClases.clear();
        OntClass ontClass = modeloOntology.getOntClass(ns + className);
        try {
            Iterator it = ontClass.listSubClasses();
            while (it.hasNext()) {
                String instanceName = it.next().toString();
                instanceName = instanceName.substring(instanceName.indexOf("#") + 1);
                modeloListaSubClases.addElement(instanceName);
                System.out.println("instancia: " + instanceName);
            }
            jListSubClases.setModel(modeloListaSubClases);            
        } catch (Exception in) {
        }

    }

       public void obtenerClases(String nombreIndividuo) {
        String ns = "http://www.semanticweb.org/hp/ontologies/2014/5/examenWebSemantica#";
        //className = "Modulo_III";
        jListClases2.removeAll();
        modeloListaClases2.clear();
        Individual individuo = modeloOntology.getIndividual(ns + nombreIndividuo);
        try{
            Resource resource = individuo.getRDFType(true); 
            String clase = resource.toString().substring(resource.toString().indexOf("#")+1);
            modeloListaClases2.addElement(clase);
            System.out.println("clase: " + clase);
        }catch(Exception in){
           
        }    
        this.jListClases2.setModel(modeloListaClases2);
    }
       

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WebSemantica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WebSemantica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WebSemantica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WebSemantica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebSemantica().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcularClases;
    private javax.swing.JButton btnCalcularIndividuos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jListClases;
    private javax.swing.JList jListClases2;
    private javax.swing.JList jListIndividuos1;
    private javax.swing.JList jListIndividuos2;
    private javax.swing.JList jListPropiedades;
    private javax.swing.JList jListSubClases;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
